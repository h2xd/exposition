import{_ as s,c as a,o as n,a as o}from"./app.7ff2b3e1.js";const A=JSON.parse('{"title":"\u{1F331} @exposition/core","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install","slug":"install"},{"level":2,"title":"createExposition","slug":"createexposition"},{"level":2,"title":"updateExpositionValues","slug":"updateexpositionvalues"},{"level":2,"title":"getExpositionValues","slug":"getexpositionvalues"},{"level":2,"title":"resetExpositionValues","slug":"resetexpositionvalues"}],"relativePath":"packages/core.md","lastUpdated":1658067063000}'),e={name:"packages/core.md"},p=o(`<h1 id="\u{1F331}-exposition-core" tabindex="-1">\u{1F331} @exposition/core <a class="header-anchor" href="#\u{1F331}-exposition-core" aria-hidden="true">#</a></h1><p>Main functionality of the <a href="https://h2xd.github.io/exposition/" target="_blank" rel="noopener noreferrer"><code>@exposition</code></a> library, to create and update the configuration while submitting events to various <a href="https://h2xd.github.io/exposition/packages/integrations.html" target="_blank" rel="noopener noreferrer">integrations</a>.</p><h2 id="install" tabindex="-1">Install <a class="header-anchor" href="#install" aria-hidden="true">#</a></h2><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#ABB2BF;">pnpm add -D @exposition/core</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#ABB2BF;">yarn add -D @exposition/core</span></span>
<span class="line"></span></code></pre></div><div class="language-sh"><span class="copy"></span><pre><code><span class="line"><span style="color:#ABB2BF;">npm install -D @exposition/core</span></span>
<span class="line"></span></code></pre></div><h2 id="createexposition" tabindex="-1"><code>createExposition</code> <a class="header-anchor" href="#createexposition" aria-hidden="true">#</a></h2><p>Create an Exposition with all necessary data. \u{1F52E}</p><ul><li>Cast the config <code>as const</code> to get full type support. <em>(as seen on line 8)</em> \u2728</li><li>The first <code>options</code> item will be set as the <code>initialValue</code> of the <code>Scenario</code></li></ul><div class="language-ts"><span class="copy"></span><div class="highlight-lines"><br><br><br><br><br><br><br><div class="highlighted">\xA0</div><br></div><pre><code><span class="line"><span style="color:#C678DD;">import</span><span style="color:#ABB2BF;"> { </span><span style="color:#E06C75;">createExposition</span><span style="color:#ABB2BF;"> } </span><span style="color:#C678DD;">from</span><span style="color:#ABB2BF;"> </span><span style="color:#98C379;">&#39;@exposition/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// \u2728 Cast the input config \`as const\` to get full type support</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">exposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createExposition</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">auth</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;valid \u2705&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;deny \u274C&#39;</span><span style="color:#ABB2BF;">]</span></span>
<span class="line"><span style="color:#ABB2BF;">  }</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/h2xd/exposition/blob/main/packages/core/functions/createExposition.ts" target="_blank" rel="noopener noreferrer">\u{1F517} Source Code</a></p><h2 id="updateexpositionvalues" tabindex="-1"><code>updateExpositionValues</code> <a class="header-anchor" href="#updateexpositionvalues" aria-hidden="true">#</a></h2><p>Update the values of the given <code>Exposition</code> and create a new <code>Exposition</code> state. \u{1F195}</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">exposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createExposition</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">autobot</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;Optimus Prime \u{1F69A}&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;Bumblebee \u{1F697}&#39;</span><span style="color:#ABB2BF;">] },</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">decepticon</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;Megatron \u2708\uFE0F&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;Starscream \u{1F6E9}\uFE0F&#39;</span><span style="color:#ABB2BF;">] },</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">updatedExposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">updateExpositionValues</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">exposition</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  { </span><span style="color:#E06C75;">autobot</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;Bumblebee \u{1F697}&#39;</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">getExpositionValues</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">updatedExposition</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#7F848E;font-style:italic;">// { autobot: &#39;Bumblebee \u{1F697}&#39;, decepticon: &#39;Megatron \u2708\uFE0F&#39; }</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/h2xd/exposition/blob/main/packages/core/functions/updateExpositionValues.ts" target="_blank" rel="noopener noreferrer">\u{1F517} Source Code</a></p><h2 id="getexpositionvalues" tabindex="-1"><code>getExpositionValues</code> <a class="header-anchor" href="#getexpositionvalues" aria-hidden="true">#</a></h2><p>Extract the current values from a given <code>Exposition</code>. \u{1F4C3}</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">exposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createExposition</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">base</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">: [</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;\u{1F35A} Rice - Cool&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">      </span><span style="color:#98C379;">&#39;\u{1F35D} Pasta - Mama Mia&#39;</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">    ],</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#61AFEF;">getExpositionValues</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">exposition</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// { base: &quot;\u{1F35A} Rice - Cool&quot; }</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/h2xd/exposition/blob/main/packages/core/functions/getExpositionValues.ts" target="_blank" rel="noopener noreferrer">\u{1F517} Source Code</a></p><h2 id="resetexpositionvalues" tabindex="-1"><code>resetExpositionValues</code> <a class="header-anchor" href="#resetexpositionvalues" aria-hidden="true">#</a></h2><p>Reset the values of a given <code>Exposition</code> to their initialValue. \u23F0</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">exposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">createExposition</span><span style="color:#ABB2BF;">({</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">character</span><span style="color:#ABB2BF;">: { </span><span style="color:#E06C75;">options</span><span style="color:#ABB2BF;">: [</span><span style="color:#98C379;">&#39;Dio \u{1F30E}&#39;</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&#39;JoJo \u{1F31F}&#39;</span><span style="color:#ABB2BF;">] },</span></span>
<span class="line"><span style="color:#ABB2BF;">} </span><span style="color:#C678DD;">as</span><span style="color:#ABB2BF;"> </span><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">updatedExposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">updateExpositionValues</span><span style="color:#ABB2BF;">(</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">exposition</span><span style="color:#ABB2BF;">,</span></span>
<span class="line"><span style="color:#ABB2BF;">  { </span><span style="color:#E06C75;">character</span><span style="color:#ABB2BF;">: </span><span style="color:#98C379;">&#39;JoJo \u{1F31F}&#39;</span><span style="color:#ABB2BF;"> }</span></span>
<span class="line"><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">getExpositionValues</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">updatedExposition</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// { character: &quot;JoJo \u{1F31F}&quot; }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">revertedExposition</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> </span><span style="color:#61AFEF;">resetExpositionValues</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">updatedExposition</span><span style="color:#ABB2BF;">)</span></span>
<span class="line"><span style="color:#61AFEF;">getExpositionValues</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">revertedExposition</span><span style="color:#ABB2BF;">) </span><span style="color:#7F848E;font-style:italic;">// { character: &quot;Dio \u{1F30E}&quot; }</span></span>
<span class="line"></span></code></pre></div><p><a href="https://github.com/h2xd/exposition/blob/main/packages/core/functions/resetExpositionValues.ts" target="_blank" rel="noopener noreferrer">\u{1F517} Source Code</a></p>`,23),l=[p];function t(c,r,i,B,y,d){return n(),a("div",null,l)}var u=s(e,[["render",t]]);export{A as __pageData,u as default};
