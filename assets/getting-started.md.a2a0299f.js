import{_ as s,c as a,o as n,a as e}from"./app.767df250.js";const C=JSON.parse('{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"Install dependencies","slug":"install-dependencies"},{"level":2,"title":"Define an exposition","slug":"define-an-exposition"}],"relativePath":"getting-started.md","lastUpdated":1657357711000}'),t={name:"getting-started.md"},o=e(`<h1 id="getting-started" tabindex="-1">Getting Started <a class="header-anchor" href="#getting-started" aria-hidden="true">#</a></h1><div class="warning custom-block"><p class="custom-block-title">\u26A0\uFE0F This library is still in active development!</p><p>I&#39;ve just added the docs to get a better feeling for the maximum amount of information that need to be put into TSDoc. And start working on examples later on.</p></div><h2 id="install-dependencies" tabindex="-1">Install dependencies <a class="header-anchor" href="#install-dependencies" aria-hidden="true">#</a></h2><p>Here are three commands for the most used package manager.<br><em>I&#39;ll be biased and promote my favorite one first.</em></p><p><code>pnpm add -D exposition</code></p><p><code>yarn add -D exposition</code></p><p><code>npm install -D exposition</code></p><h2 id="define-an-exposition" tabindex="-1">Define an exposition <a class="header-anchor" href="#define-an-exposition" aria-hidden="true">#</a></h2><p>Create an Exposition with all necessary data \u{1F52E}.</p><div class="language-ts"><span class="copy"></span><pre><code><span class="line"><span style="color:#89DDFF;font-style:italic;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">createExposition</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">exposition</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// \u2728 Cast the input config \`as const\` to get full type support</span></span>
<span class="line"><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;"> exposition </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">createExposition</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">auth</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">options</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">valid \u2705</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">deny \u274C</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">]</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">as</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">const</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,10),p=[o];function l(c,i,r,d,D,y){return n(),a("div",null,p)}var A=s(t,[["render",l]]);export{C as __pageData,A as default};
